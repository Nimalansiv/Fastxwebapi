// <auto-generated />
using System;
using FastxWebApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FastxWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250812093142_in")]
    partial class @in
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FastxWebApi.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NoOfSeats")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalFare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("RouteId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            BookingDate = new DateTime(2025, 8, 11, 15, 1, 40, 495, DateTimeKind.Local).AddTicks(6767),
                            IsDeleted = true,
                            NoOfSeats = 1,
                            RouteId = 1,
                            Status = "Cancelled",
                            TotalFare = 1500.00m,
                            UserId = 1
                        },
                        new
                        {
                            BookingId = 2,
                            BookingDate = new DateTime(2025, 8, 11, 15, 1, 40, 495, DateTimeKind.Local).AddTicks(6787),
                            IsDeleted = false,
                            NoOfSeats = 2,
                            RouteId = 2,
                            Status = "Booked",
                            TotalFare = 1600.00m,
                            UserId = 1
                        },
                        new
                        {
                            BookingId = 3,
                            BookingDate = new DateTime(2025, 8, 11, 15, 1, 40, 495, DateTimeKind.Local).AddTicks(6792),
                            IsDeleted = false,
                            NoOfSeats = 2,
                            RouteId = 2,
                            Status = "Booked",
                            TotalFare = 1600.00m,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.BookingSeat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("SeatId");

                    b.ToTable("BookingsSeats", (string)null);
                });

            modelBuilder.Entity("FastxWebApi.Models.Bus", b =>
                {
                    b.Property<int>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusId"));

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BusOperatorId")
                        .HasColumnType("int");

                    b.Property<string>("BusType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.HasKey("BusId");

                    b.HasIndex("BusOperatorId");

                    b.ToTable("Buses", (string)null);

                    b.HasData(
                        new
                        {
                            BusId = 1,
                            Amenities = "Wi-Fi, Water Bottle,TV",
                            BusName = "Volvo",
                            BusNumber = "KA-01-AB-8754",
                            BusType = "AC Sleeper",
                            IsDeleted = false,
                            Status = "Active",
                            TotalSeats = 40
                        },
                        new
                        {
                            BusId = 2,
                            Amenities = "Wi-Fi",
                            BusName = "BENZ",
                            BusNumber = "TN-02-CD-9999",
                            BusType = "Non-AC",
                            IsDeleted = false,
                            Status = "Active",
                            TotalSeats = 45
                        },
                        new
                        {
                            BusId = 3,
                            Amenities = "Wi-Fi",
                            BusName = "Bharat",
                            BusNumber = "TM-08-CM-2022",
                            BusType = "Non-AC",
                            IsDeleted = false,
                            Status = "Active",
                            TotalSeats = 25
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            PaymentId = 1,
                            Amount = 1500.00m,
                            BookingId = 1,
                            PaymentDate = new DateTime(2025, 8, 9, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Credit Card",
                            Status = "Completed",
                            UserId = 1
                        },
                        new
                        {
                            PaymentId = 2,
                            Amount = 800.00m,
                            BookingId = 2,
                            PaymentDate = new DateTime(2025, 8, 9, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "UPI",
                            Status = "Completed",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Refund", b =>
                {
                    b.Property<int>("RefundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefundId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessedBy")
                        .HasColumnType("int");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RefundDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RefundId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.HasIndex("ProcessedBy");

                    b.HasIndex("UserId");

                    b.ToTable("Refunds");

                    b.HasData(
                        new
                        {
                            RefundId = 1,
                            BookingId = 1,
                            RefundAmount = 1500.00m,
                            RefundDate = new DateTime(2025, 8, 12, 15, 1, 40, 495, DateTimeKind.Local).AddTicks(6858),
                            Status = "Pending",
                            UserId = 1
                        },
                        new
                        {
                            RefundId = 2,
                            BookingId = 2,
                            ProcessedBy = 2,
                            RefundAmount = 800.00m,
                            RefundDate = new DateTime(2025, 8, 12, 15, 1, 40, 495, DateTimeKind.Local).AddTicks(6865),
                            Status = "Approved",
                            UserId = 1
                        },
                        new
                        {
                            RefundId = 3,
                            BookingId = 3,
                            RefundAmount = 900.00m,
                            RefundDate = new DateTime(2025, 8, 12, 15, 1, 40, 495, DateTimeKind.Local).AddTicks(6869),
                            Status = "Pending",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "User"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Bus Operator"
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteId");

                    b.HasIndex("BusId");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            RouteId = 1,
                            ArrivalTime = new DateTime(2025, 8, 3, 6, 0, 0, 0, DateTimeKind.Unspecified),
                            BusId = 1,
                            DepartureTime = new DateTime(2025, 8, 2, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Chidambaram",
                            Fare = 1500.00m,
                            IsDeleted = false,
                            Origin = "Bangalore",
                            Status = "Active"
                        },
                        new
                        {
                            RouteId = 2,
                            ArrivalTime = new DateTime(2025, 8, 3, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            BusId = 2,
                            DepartureTime = new DateTime(2025, 8, 2, 23, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Cuddalore",
                            Fare = 800.00m,
                            IsDeleted = false,
                            Origin = "Chennai",
                            Status = "Active"
                        },
                        new
                        {
                            RouteId = 3,
                            ArrivalTime = new DateTime(2025, 8, 3, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            BusId = 3,
                            DepartureTime = new DateTime(2025, 8, 2, 23, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "CDM",
                            Fare = 600.00m,
                            IsDeleted = false,
                            Origin = "Chennai",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SeatId");

                    b.HasIndex("RouteId");

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            SeatId = 1,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "A1",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 2,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "A2",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 3,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "B1",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 4,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 2,
                            SeatNumber = "C1",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 5,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 2,
                            SeatNumber = "C2",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 6,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 3,
                            SeatNumber = "D1",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 7,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 3,
                            SeatNumber = "D2",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BusId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("HashKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "CDM",
                            ContactNumber = "9876543210",
                            CreatedAt = new DateTime(2025, 8, 12, 15, 1, 40, 495, DateTimeKind.Local).AddTicks(6154),
                            Email = "Nimal@fastx.com",
                            Gender = "Male",
                            HashKey = new byte[] { 103, 21, 76, 36, 126, 231, 195, 124, 240, 61, 171, 141, 202, 233, 240, 151, 134, 160, 3, 85, 0, 75, 182, 100, 240, 44, 198, 250, 101, 26, 246, 143, 52, 112, 204, 218, 132, 109, 75, 116, 253, 181, 80, 26, 208, 223, 42, 125, 143, 115, 105, 3, 214, 254, 61, 142, 49, 6, 67, 33, 146, 202, 223, 150 },
                            IsDeleted = false,
                            Name = "Nimalan",
                            Password = new byte[] { 81, 231, 142, 13, 129, 151, 247, 201, 10, 157, 143, 107, 94, 229, 67, 64, 130, 52, 220, 171, 39, 80, 152, 80, 47, 176, 18, 250, 13, 87, 202, 38 },
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Address = "LA, california",
                            ContactNumber = "785423654",
                            CreatedAt = new DateTime(2025, 8, 12, 15, 1, 40, 495, DateTimeKind.Local).AddTicks(6235),
                            Email = "GM@fastx.com",
                            Gender = "Male",
                            HashKey = new byte[] { 162, 195, 184, 207, 214, 249, 110, 238, 34, 232, 80, 112, 215, 186, 204, 27, 48, 36, 87, 128, 32, 175, 234, 36, 162, 242, 74, 45, 149, 210, 200, 44, 13, 155, 64, 203, 240, 251, 208, 201, 0, 224, 144, 50, 192, 248, 170, 178, 47, 215, 177, 10, 26, 28, 115, 206, 17, 24, 196, 176, 76, 102, 92, 143 },
                            IsDeleted = false,
                            Name = "Guru",
                            Password = new byte[] { 159, 100, 222, 197, 78, 140, 211, 2, 159, 248, 242, 93, 64, 64, 185, 158, 96, 120, 252, 170, 41, 76, 65, 172, 126, 136, 242, 229, 111, 192, 41, 150 },
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            Address = "Heaven block 1",
                            BusId = 1,
                            ContactNumber = "4552155741",
                            CreatedAt = new DateTime(2025, 8, 12, 15, 1, 40, 495, DateTimeKind.Local).AddTicks(6302),
                            Email = "thordriver@fastx.com",
                            Gender = "Male",
                            HashKey = new byte[] { 62, 255, 224, 204, 73, 0, 94, 93, 237, 21, 241, 82, 213, 140, 101, 84, 8, 187, 54, 65, 171, 107, 65, 72, 169, 15, 149, 9, 193, 231, 24, 93, 238, 64, 178, 106, 151, 220, 127, 12, 142, 38, 165, 250, 67, 168, 254, 174, 154, 244, 221, 231, 57, 40, 163, 231, 60, 100, 117, 10, 88, 116, 252, 14 },
                            IsDeleted = false,
                            Name = "Driver Thor",
                            Password = new byte[] { 162, 140, 225, 122, 158, 51, 145, 115, 116, 124, 49, 87, 168, 65, 235, 151, 219, 18, 57, 140, 129, 67, 50, 4, 125, 33, 28, 217, 29, 43, 61, 138 },
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Booking", b =>
                {
                    b.HasOne("FastxWebApi.Models.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FastxWebApi.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Route");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FastxWebApi.Models.BookingSeat", b =>
                {
                    b.HasOne("FastxWebApi.Models.Booking", "Booking")
                        .WithMany("BookingSeats")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FastxWebApi.Models.Seat", "Seat")
                        .WithMany("BookingSeats")
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("FastxWebApi.Models.Bus", b =>
                {
                    b.HasOne("FastxWebApi.Models.User", "BusOperator")
                        .WithMany("Buses")
                        .HasForeignKey("BusOperatorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BusOperator");
                });

            modelBuilder.Entity("FastxWebApi.Models.Payment", b =>
                {
                    b.HasOne("FastxWebApi.Models.Booking", "Booking")
                        .WithOne("Payment")
                        .HasForeignKey("FastxWebApi.Models.Payment", "BookingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FastxWebApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FastxWebApi.Models.Refund", b =>
                {
                    b.HasOne("FastxWebApi.Models.Booking", "Booking")
                        .WithOne("Refund")
                        .HasForeignKey("FastxWebApi.Models.Refund", "BookingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FastxWebApi.Models.User", "ProcessedByUser")
                        .WithMany("ProcessedRefunds")
                        .HasForeignKey("ProcessedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FastxWebApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("ProcessedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FastxWebApi.Models.Route", b =>
                {
                    b.HasOne("FastxWebApi.Models.Bus", "Bus")
                        .WithMany("Routes")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("FastxWebApi.Models.Seat", b =>
                {
                    b.HasOne("FastxWebApi.Models.Route", "Route")
                        .WithMany("Seats")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("FastxWebApi.Models.User", b =>
                {
                    b.HasOne("FastxWebApi.Models.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FastxWebApi.Models.Booking", b =>
                {
                    b.Navigation("BookingSeats");

                    b.Navigation("Payment");

                    b.Navigation("Refund");
                });

            modelBuilder.Entity("FastxWebApi.Models.Bus", b =>
                {
                    b.Navigation("Routes");
                });

            modelBuilder.Entity("FastxWebApi.Models.Role", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("FastxWebApi.Models.Route", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("FastxWebApi.Models.Seat", b =>
                {
                    b.Navigation("BookingSeats");
                });

            modelBuilder.Entity("FastxWebApi.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Buses");

                    b.Navigation("ProcessedRefunds");
                });
#pragma warning restore 612, 618
        }
    }
}
