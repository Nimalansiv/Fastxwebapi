// <auto-generated />
using System;
using FastxWebApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FastxWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250826050918_FinalSeedData")]
    partial class FinalSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FastxWebApi.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NoOfSeats")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalFare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("RouteId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            BookingDate = new DateTime(2025, 8, 25, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = true,
                            NoOfSeats = 1,
                            RouteId = 1,
                            Status = "Cancelled",
                            TotalFare = 1500.00m,
                            UserId = 1
                        },
                        new
                        {
                            BookingId = 2,
                            BookingDate = new DateTime(2025, 8, 26, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            NoOfSeats = 2,
                            RouteId = 2,
                            Status = "Booked",
                            TotalFare = 1600.00m,
                            UserId = 1
                        },
                        new
                        {
                            BookingId = 3,
                            BookingDate = new DateTime(2025, 8, 24, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            NoOfSeats = 2,
                            RouteId = 2,
                            Status = "Booked",
                            TotalFare = 1600.00m,
                            UserId = 1
                        },
                        new
                        {
                            BookingId = 4,
                            BookingDate = new DateTime(2025, 8, 23, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = true,
                            NoOfSeats = 3,
                            RouteId = 3,
                            Status = "Cancelled",
                            TotalFare = 1800.00m,
                            UserId = 6
                        },
                        new
                        {
                            BookingId = 5,
                            BookingDate = new DateTime(2025, 8, 22, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            NoOfSeats = 1,
                            RouteId = 4,
                            Status = "Booked",
                            TotalFare = 800.00m,
                            UserId = 6
                        },
                        new
                        {
                            BookingId = 6,
                            BookingDate = new DateTime(2025, 8, 22, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = true,
                            NoOfSeats = 2,
                            RouteId = 5,
                            Status = "Cancelled",
                            TotalFare = 3600.00m,
                            UserId = 7
                        },
                        new
                        {
                            BookingId = 7,
                            BookingDate = new DateTime(2025, 8, 26, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            NoOfSeats = 1,
                            RouteId = 6,
                            Status = "Booked",
                            TotalFare = 2800.00m,
                            UserId = 7
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.BookingSeat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("SeatId");

                    b.ToTable("BookingsSeats", (string)null);
                });

            modelBuilder.Entity("FastxWebApi.Models.Bus", b =>
                {
                    b.Property<int>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusId"));

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BusOperatorId")
                        .HasColumnType("int");

                    b.Property<string>("BusType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.HasKey("BusId");

                    b.HasIndex("BusOperatorId");

                    b.ToTable("Buses", (string)null);

                    b.HasData(
                        new
                        {
                            BusId = 1,
                            Amenities = "Wi-Fi, Water Bottle,TV",
                            BusName = "Volvo",
                            BusNumber = "KA-01-AB-8754",
                            BusOperatorId = 3,
                            BusType = "AC Sleeper",
                            IsDeleted = false,
                            Status = "Active",
                            TotalSeats = 40
                        },
                        new
                        {
                            BusId = 2,
                            Amenities = "Wi-Fi",
                            BusName = "BENZ",
                            BusNumber = "TN-02-CD-9999",
                            BusOperatorId = 3,
                            BusType = "Non-AC",
                            IsDeleted = false,
                            Status = "Active",
                            TotalSeats = 45
                        },
                        new
                        {
                            BusId = 3,
                            Amenities = "Wi-Fi",
                            BusName = "Bharat",
                            BusNumber = "TM-08-CM-2022",
                            BusOperatorId = 3,
                            BusType = "Non-AC",
                            IsDeleted = false,
                            Status = "Active",
                            TotalSeats = 25
                        },
                        new
                        {
                            BusId = 4,
                            Amenities = "Wi-Fi",
                            BusName = "ECR express",
                            BusNumber = "SN-02-TR-2354",
                            BusOperatorId = 4,
                            BusType = "Non-AC",
                            IsDeleted = false,
                            Status = "Active",
                            TotalSeats = 18
                        },
                        new
                        {
                            BusId = 5,
                            Amenities = "Wi-Fi",
                            BusName = "Rameshwaram exp",
                            BusNumber = "ER-02-NM-5421",
                            BusOperatorId = 4,
                            BusType = "AC",
                            IsDeleted = false,
                            Status = "Active",
                            TotalSeats = 20
                        },
                        new
                        {
                            BusId = 6,
                            Amenities = "Wi-Fi",
                            BusName = "Kovai exp",
                            BusNumber = "YR-03-RF-8976",
                            BusOperatorId = 4,
                            BusType = "AC",
                            IsDeleted = false,
                            Status = "Active",
                            TotalSeats = 13
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            PaymentId = 1,
                            Amount = 1500.00m,
                            BookingId = 1,
                            PaymentDate = new DateTime(2025, 8, 9, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Credit Card",
                            Status = "Completed",
                            UserId = 1
                        },
                        new
                        {
                            PaymentId = 2,
                            Amount = 1600.00m,
                            BookingId = 2,
                            PaymentDate = new DateTime(2025, 8, 9, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "UPI",
                            Status = "Completed",
                            UserId = 1
                        },
                        new
                        {
                            PaymentId = 3,
                            Amount = 1600.00m,
                            BookingId = 3,
                            PaymentDate = new DateTime(2025, 9, 26, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Credit Card",
                            Status = "Completed",
                            UserId = 1
                        },
                        new
                        {
                            PaymentId = 4,
                            Amount = 1800.00m,
                            BookingId = 4,
                            PaymentDate = new DateTime(2025, 8, 23, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "UPI",
                            Status = "Completed",
                            UserId = 6
                        },
                        new
                        {
                            PaymentId = 5,
                            Amount = 800.00m,
                            BookingId = 5,
                            PaymentDate = new DateTime(2025, 8, 26, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Credit Card",
                            Status = "Completed",
                            UserId = 6
                        },
                        new
                        {
                            PaymentId = 6,
                            Amount = 3600.00m,
                            BookingId = 6,
                            PaymentDate = new DateTime(2025, 9, 26, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Debit Card",
                            Status = "Completed",
                            UserId = 7
                        },
                        new
                        {
                            PaymentId = 7,
                            Amount = 2800.00m,
                            BookingId = 7,
                            PaymentDate = new DateTime(2025, 9, 26, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "UPI",
                            Status = "Completed",
                            UserId = 7
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Refund", b =>
                {
                    b.Property<int>("RefundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefundId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessedBy")
                        .HasColumnType("int");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RefundDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RefundId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.HasIndex("ProcessedBy");

                    b.HasIndex("UserId");

                    b.ToTable("Refunds");

                    b.HasData(
                        new
                        {
                            RefundId = 1,
                            BookingId = 1,
                            RefundAmount = 1500.00m,
                            RefundDate = new DateTime(2025, 8, 26, 10, 39, 17, 217, DateTimeKind.Local).AddTicks(8568),
                            Status = "Pending",
                            UserId = 1
                        },
                        new
                        {
                            RefundId = 2,
                            BookingId = 4,
                            ProcessedBy = 2,
                            RefundAmount = 1800.00m,
                            RefundDate = new DateTime(2025, 8, 26, 10, 39, 17, 217, DateTimeKind.Local).AddTicks(8574),
                            Status = "Pending",
                            UserId = 6
                        },
                        new
                        {
                            RefundId = 3,
                            BookingId = 6,
                            RefundAmount = 3600.00m,
                            RefundDate = new DateTime(2025, 8, 26, 10, 39, 17, 217, DateTimeKind.Local).AddTicks(8578),
                            Status = "Pending",
                            UserId = 7
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "User"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Bus Operator"
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteId");

                    b.HasIndex("BusId");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            RouteId = 1,
                            ArrivalTime = new DateTime(2025, 9, 30, 6, 0, 0, 0, DateTimeKind.Unspecified),
                            BusId = 1,
                            DepartureTime = new DateTime(2025, 9, 27, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Chidambaram",
                            Fare = 1500.00m,
                            IsDeleted = false,
                            Origin = "Bangalore",
                            Status = "Active"
                        },
                        new
                        {
                            RouteId = 2,
                            ArrivalTime = new DateTime(2025, 9, 6, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            BusId = 2,
                            DepartureTime = new DateTime(2025, 9, 4, 23, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Cuddalore",
                            Fare = 800.00m,
                            IsDeleted = false,
                            Origin = "Chennai",
                            Status = "Active"
                        },
                        new
                        {
                            RouteId = 3,
                            ArrivalTime = new DateTime(2025, 9, 23, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            BusId = 3,
                            DepartureTime = new DateTime(2025, 9, 21, 23, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "CDM",
                            Fare = 600.00m,
                            IsDeleted = false,
                            Origin = "Chennai",
                            Status = "Active"
                        },
                        new
                        {
                            RouteId = 4,
                            ArrivalTime = new DateTime(2025, 9, 10, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            BusId = 4,
                            DepartureTime = new DateTime(2025, 9, 9, 23, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Cuddalore",
                            Fare = 800.00m,
                            IsDeleted = false,
                            Origin = "Chennai",
                            Status = "Active"
                        },
                        new
                        {
                            RouteId = 5,
                            ArrivalTime = new DateTime(2025, 9, 13, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            BusId = 5,
                            DepartureTime = new DateTime(2025, 9, 11, 23, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "CDM",
                            Fare = 1800.00m,
                            IsDeleted = false,
                            Origin = "Rameshwaram",
                            Status = "Active"
                        },
                        new
                        {
                            RouteId = 6,
                            ArrivalTime = new DateTime(2025, 9, 18, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            BusId = 6,
                            DepartureTime = new DateTime(2025, 9, 15, 23, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "CDM",
                            Fare = 2800.00m,
                            IsDeleted = false,
                            Origin = "Kovai",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SeatId");

                    b.HasIndex("BusId");

                    b.HasIndex("RouteId");

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            SeatId = 1,
                            BusId = 1,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "A1",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 2,
                            BusId = 1,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "A2",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 3,
                            BusId = 1,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "A3",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 4,
                            BusId = 1,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "A4",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 5,
                            BusId = 1,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "A5",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 6,
                            BusId = 1,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "A6",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 7,
                            BusId = 1,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "A7",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 8,
                            BusId = 1,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "A8",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 9,
                            BusId = 1,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "A9",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 10,
                            BusId = 1,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "A10",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 11,
                            BusId = 2,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 2,
                            SeatNumber = "B1",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 12,
                            BusId = 2,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 2,
                            SeatNumber = "B2",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 13,
                            BusId = 2,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 2,
                            SeatNumber = "B3",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 14,
                            BusId = 2,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 2,
                            SeatNumber = "B4",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 15,
                            BusId = 2,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 2,
                            SeatNumber = "B5",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 16,
                            BusId = 2,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 2,
                            SeatNumber = "B6",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 17,
                            BusId = 2,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 2,
                            SeatNumber = "B7",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 18,
                            BusId = 2,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 2,
                            SeatNumber = "B8",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 19,
                            BusId = 2,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 2,
                            SeatNumber = "B9",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 20,
                            BusId = 2,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 2,
                            SeatNumber = "B10",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 21,
                            BusId = 3,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 3,
                            SeatNumber = "C1",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 22,
                            BusId = 3,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 3,
                            SeatNumber = "C2",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 23,
                            BusId = 3,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 3,
                            SeatNumber = "C3",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 24,
                            BusId = 3,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 3,
                            SeatNumber = "C4",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 25,
                            BusId = 3,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 3,
                            SeatNumber = "C5",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 26,
                            BusId = 3,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 3,
                            SeatNumber = "C6",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 27,
                            BusId = 3,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 3,
                            SeatNumber = "C7",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 28,
                            BusId = 3,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 3,
                            SeatNumber = "C8",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 29,
                            BusId = 3,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 3,
                            SeatNumber = "C9",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 30,
                            BusId = 3,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 3,
                            SeatNumber = "C10",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 31,
                            BusId = 4,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 4,
                            SeatNumber = "D1",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 32,
                            BusId = 4,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 4,
                            SeatNumber = "D2",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 33,
                            BusId = 4,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 4,
                            SeatNumber = "D3",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 34,
                            BusId = 4,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 4,
                            SeatNumber = "D4",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 35,
                            BusId = 4,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 4,
                            SeatNumber = "D5",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 36,
                            BusId = 4,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 4,
                            SeatNumber = "D6",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 37,
                            BusId = 4,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 4,
                            SeatNumber = "D7",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 38,
                            BusId = 4,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 4,
                            SeatNumber = "D8",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 39,
                            BusId = 4,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 4,
                            SeatNumber = "D9",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 40,
                            BusId = 4,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 4,
                            SeatNumber = "D10",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 41,
                            BusId = 5,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 5,
                            SeatNumber = "E1",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 42,
                            BusId = 5,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 5,
                            SeatNumber = "E2",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 43,
                            BusId = 5,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 5,
                            SeatNumber = "E3",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 44,
                            BusId = 5,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 5,
                            SeatNumber = "E4",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 45,
                            BusId = 5,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 5,
                            SeatNumber = "E5",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 46,
                            BusId = 5,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 5,
                            SeatNumber = "E6",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 47,
                            BusId = 5,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 5,
                            SeatNumber = "E7",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 48,
                            BusId = 5,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 5,
                            SeatNumber = "E8",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 49,
                            BusId = 5,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 5,
                            SeatNumber = "E9",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 50,
                            BusId = 5,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 5,
                            SeatNumber = "E10",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 51,
                            BusId = 6,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 6,
                            SeatNumber = "F1",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 52,
                            BusId = 6,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 6,
                            SeatNumber = "F2",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 53,
                            BusId = 6,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 6,
                            SeatNumber = "F3",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 54,
                            BusId = 6,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 6,
                            SeatNumber = "F4",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 55,
                            BusId = 6,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 6,
                            SeatNumber = "F5",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 56,
                            BusId = 6,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 6,
                            SeatNumber = "F6",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 57,
                            BusId = 6,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 6,
                            SeatNumber = "F7",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 58,
                            BusId = 6,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 6,
                            SeatNumber = "F8",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 59,
                            BusId = 6,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 6,
                            SeatNumber = "F9",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 60,
                            BusId = 6,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 6,
                            SeatNumber = "F10",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BusId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("HashKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "CDM",
                            ContactNumber = "9876543210",
                            CreatedAt = new DateTime(2025, 8, 26, 10, 39, 17, 217, DateTimeKind.Local).AddTicks(7472),
                            Email = "Nimal@fastx.com",
                            Gender = "Male",
                            HashKey = new byte[] { 24, 67, 162, 153, 53, 215, 180, 76, 211, 103, 117, 137, 30, 135, 245, 116, 121, 142, 162, 89, 78, 164, 118, 35, 211, 129, 116, 223, 201, 14, 117, 9, 126, 109, 4, 184, 24, 225, 17, 115, 252, 81, 14, 77, 61, 107, 236, 241, 14, 89, 127, 122, 225, 61, 93, 238, 68, 72, 198, 5, 216, 186, 175, 172 },
                            IsDeleted = false,
                            Name = "Nimalan",
                            Password = new byte[] { 199, 24, 152, 102, 183, 36, 12, 64, 44, 78, 4, 96, 155, 28, 39, 175, 150, 6, 9, 36, 152, 207, 250, 88, 47, 247, 48, 6, 25, 132, 4, 137 },
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Address = "LA, california",
                            ContactNumber = "785423654",
                            CreatedAt = new DateTime(2025, 8, 26, 10, 39, 17, 217, DateTimeKind.Local).AddTicks(7544),
                            Email = "GM@fastx.com",
                            Gender = "Male",
                            HashKey = new byte[] { 167, 64, 160, 232, 217, 118, 151, 127, 167, 245, 17, 245, 183, 235, 213, 68, 54, 230, 2, 13, 80, 61, 70, 148, 111, 75, 193, 220, 125, 47, 16, 223, 214, 214, 199, 46, 102, 210, 203, 177, 43, 25, 2, 201, 230, 247, 241, 147, 253, 19, 245, 142, 207, 204, 228, 153, 63, 77, 198, 170, 177, 201, 27, 194 },
                            IsDeleted = false,
                            Name = "Guru",
                            Password = new byte[] { 24, 110, 70, 161, 116, 202, 236, 143, 73, 66, 33, 184, 183, 50, 16, 1, 128, 165, 41, 157, 176, 131, 138, 151, 140, 173, 147, 31, 89, 232, 59, 67 },
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            Address = "Heaven block 1",
                            ContactNumber = "4552155741",
                            CreatedAt = new DateTime(2025, 8, 26, 10, 39, 17, 217, DateTimeKind.Local).AddTicks(7610),
                            Email = "thordriver@fastx.com",
                            Gender = "Male",
                            HashKey = new byte[] { 5, 254, 214, 212, 164, 112, 178, 141, 236, 180, 175, 23, 188, 198, 194, 87, 90, 137, 182, 248, 73, 9, 98, 2, 164, 206, 83, 143, 201, 121, 212, 50, 41, 214, 37, 106, 185, 38, 127, 35, 1, 227, 142, 159, 83, 97, 61, 93, 201, 233, 156, 36, 132, 211, 109, 188, 184, 221, 251, 191, 61, 100, 213, 199 },
                            IsDeleted = false,
                            Name = "Driver Thor",
                            Password = new byte[] { 114, 86, 193, 207, 196, 231, 158, 245, 152, 243, 3, 71, 61, 66, 65, 109, 38, 198, 211, 237, 136, 53, 150, 85, 158, 95, 171, 125, 16, 145, 26, 194 },
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 4,
                            Address = "Chennai",
                            ContactNumber = "7845213698",
                            CreatedAt = new DateTime(2025, 8, 26, 10, 39, 17, 217, DateTimeKind.Local).AddTicks(7674),
                            Email = "Kumardriver@fast.com",
                            Gender = "Male",
                            HashKey = new byte[] { 213, 217, 124, 188, 149, 254, 17, 210, 248, 89, 57, 215, 186, 102, 120, 193, 101, 208, 145, 27, 82, 170, 30, 3, 113, 114, 17, 225, 174, 207, 0, 113, 86, 219, 161, 10, 9, 220, 97, 115, 225, 250, 253, 252, 61, 236, 183, 73, 99, 141, 170, 190, 175, 239, 175, 90, 86, 208, 227, 37, 96, 115, 70, 13 },
                            IsDeleted = false,
                            Name = "Driver Kumar",
                            Password = new byte[] { 108, 236, 148, 2, 178, 100, 160, 219, 161, 35, 99, 243, 50, 183, 131, 254, 226, 227, 3, 1, 97, 90, 138, 110, 39, 236, 69, 122, 246, 61, 47, 220 },
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 5,
                            Address = "Chennai",
                            ContactNumber = "7458961235",
                            CreatedAt = new DateTime(2025, 8, 26, 10, 39, 17, 217, DateTimeKind.Local).AddTicks(7736),
                            Email = "sivan@fast.com",
                            Gender = "Male",
                            HashKey = new byte[] { 190, 104, 103, 70, 178, 102, 89, 54, 135, 207, 238, 234, 164, 197, 93, 99, 18, 49, 234, 202, 48, 50, 186, 189, 32, 239, 154, 237, 222, 2, 38, 23, 242, 243, 89, 106, 218, 54, 125, 243, 12, 32, 179, 216, 114, 39, 184, 136, 110, 190, 64, 52, 239, 7, 84, 225, 157, 48, 76, 115, 211, 108, 108, 244 },
                            IsDeleted = false,
                            Name = "Sivan",
                            Password = new byte[] { 128, 17, 182, 84, 114, 103, 191, 249, 115, 37, 112, 61, 168, 15, 93, 225, 212, 218, 224, 179, 18, 97, 203, 218, 109, 207, 125, 53, 16, 61, 75, 134 },
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            Address = "CDM",
                            ContactNumber = "7854123695",
                            CreatedAt = new DateTime(2025, 8, 26, 10, 39, 17, 217, DateTimeKind.Local).AddTicks(7800),
                            Email = "sankar@fastx.com",
                            Gender = "Male",
                            HashKey = new byte[] { 105, 128, 148, 255, 132, 55, 26, 227, 163, 58, 78, 149, 41, 197, 34, 223, 216, 230, 109, 160, 130, 105, 148, 228, 6, 56, 40, 159, 220, 186, 224, 188, 136, 174, 53, 157, 40, 55, 112, 135, 169, 162, 91, 244, 196, 197, 51, 223, 33, 186, 205, 42, 34, 165, 31, 181, 186, 82, 93, 240, 99, 76, 221, 59 },
                            IsDeleted = false,
                            Name = "sankar",
                            Password = new byte[] { 52, 49, 245, 99, 130, 59, 165, 69, 178, 176, 87, 117, 247, 55, 206, 223, 83, 253, 48, 74, 107, 44, 204, 230, 247, 191, 206, 63, 73, 218, 53, 140 },
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 7,
                            Address = "Chepauk",
                            ContactNumber = "7436985212",
                            CreatedAt = new DateTime(2025, 8, 26, 10, 39, 17, 217, DateTimeKind.Local).AddTicks(7942),
                            Email = "venkat@gmail.com",
                            Gender = "Male",
                            HashKey = new byte[] { 172, 209, 232, 55, 174, 188, 5, 175, 103, 227, 15, 202, 159, 176, 77, 105, 185, 192, 193, 9, 215, 56, 106, 174, 81, 150, 69, 149, 202, 117, 179, 103, 187, 26, 3, 103, 75, 175, 50, 152, 1, 209, 26, 28, 59, 69, 239, 121, 74, 189, 227, 255, 16, 80, 129, 177, 54, 164, 54, 92, 90, 152, 153, 212 },
                            IsDeleted = false,
                            Name = "Venkat",
                            Password = new byte[] { 172, 50, 97, 86, 92, 104, 28, 99, 181, 38, 63, 77, 153, 1, 78, 119, 163, 244, 15, 144, 110, 172, 11, 27, 112, 95, 71, 118, 221, 176, 133, 106 },
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Booking", b =>
                {
                    b.HasOne("FastxWebApi.Models.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FastxWebApi.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Route");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FastxWebApi.Models.BookingSeat", b =>
                {
                    b.HasOne("FastxWebApi.Models.Booking", "Booking")
                        .WithMany("BookingSeats")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FastxWebApi.Models.Seat", "Seat")
                        .WithMany("BookingSeats")
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("FastxWebApi.Models.Bus", b =>
                {
                    b.HasOne("FastxWebApi.Models.User", "BusOperator")
                        .WithMany("Buses")
                        .HasForeignKey("BusOperatorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BusOperator");
                });

            modelBuilder.Entity("FastxWebApi.Models.Payment", b =>
                {
                    b.HasOne("FastxWebApi.Models.Booking", "Booking")
                        .WithOne("Payment")
                        .HasForeignKey("FastxWebApi.Models.Payment", "BookingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FastxWebApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FastxWebApi.Models.Refund", b =>
                {
                    b.HasOne("FastxWebApi.Models.Booking", "Booking")
                        .WithOne("Refund")
                        .HasForeignKey("FastxWebApi.Models.Refund", "BookingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FastxWebApi.Models.User", "ProcessedByUser")
                        .WithMany("ProcessedRefunds")
                        .HasForeignKey("ProcessedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FastxWebApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("ProcessedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FastxWebApi.Models.Route", b =>
                {
                    b.HasOne("FastxWebApi.Models.Bus", "Bus")
                        .WithMany("Routes")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("FastxWebApi.Models.Seat", b =>
                {
                    b.HasOne("FastxWebApi.Models.Bus", "Bus")
                        .WithMany("Seats")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FastxWebApi.Models.Route", "Route")
                        .WithMany("Seats")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("FastxWebApi.Models.User", b =>
                {
                    b.HasOne("FastxWebApi.Models.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FastxWebApi.Models.Booking", b =>
                {
                    b.Navigation("BookingSeats");

                    b.Navigation("Payment");

                    b.Navigation("Refund");
                });

            modelBuilder.Entity("FastxWebApi.Models.Bus", b =>
                {
                    b.Navigation("Routes");

                    b.Navigation("Seats");
                });

            modelBuilder.Entity("FastxWebApi.Models.Role", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("FastxWebApi.Models.Route", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("FastxWebApi.Models.Seat", b =>
                {
                    b.Navigation("BookingSeats");
                });

            modelBuilder.Entity("FastxWebApi.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Buses");

                    b.Navigation("ProcessedRefunds");
                });
#pragma warning restore 612, 618
        }
    }
}
