// <auto-generated />
using System;
using FastxWebApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FastxWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250808145155_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FastxWebApi.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NoOfSeats")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalFare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("RouteId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("FastxWebApi.Models.BookingSeat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("SeatId");

                    b.ToTable("BookingsSeats");
                });

            modelBuilder.Entity("FastxWebApi.Models.Bus", b =>
                {
                    b.Property<int>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusId"));

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BusOperatorId")
                        .HasColumnType("int");

                    b.Property<string>("BusType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.HasKey("BusId");

                    b.ToTable("Buses");

                    b.HasData(
                        new
                        {
                            BusId = 1,
                            Amenities = "Wi-Fi, Water Bottle,TV",
                            BusName = "Volvo ",
                            BusNumber = "KA-01-AB-8754",
                            BusOperatorId = 0,
                            BusType = "AC Sleeper",
                            IsDeleted = false,
                            Status = "Active",
                            TotalSeats = 40
                        },
                        new
                        {
                            BusId = 2,
                            Amenities = "Wi-Fi",
                            BusName = "BENZ  ",
                            BusNumber = "TN-02-CD-9999",
                            BusOperatorId = 0,
                            BusType = "Non-AC",
                            IsDeleted = false,
                            Status = "Active",
                            TotalSeats = 45
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("FastxWebApi.Models.Refund", b =>
                {
                    b.Property<int>("RefundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefundId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessedBy")
                        .HasColumnType("int");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RefundDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RefundId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.HasIndex("ProcessedBy");

                    b.HasIndex("UserId");

                    b.ToTable("Refunds");
                });

            modelBuilder.Entity("FastxWebApi.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "User"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Bus Operator"
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteId");

                    b.HasIndex("BusId");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            RouteId = 1,
                            ArrivalTime = new DateTime(2025, 8, 3, 6, 0, 0, 0, DateTimeKind.Unspecified),
                            BusId = 1,
                            DepartureTime = new DateTime(2025, 8, 2, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Chidambaram",
                            Fare = 1500.00m,
                            IsDeleted = false,
                            Origin = "Bangalore",
                            Status = "Active"
                        },
                        new
                        {
                            RouteId = 2,
                            ArrivalTime = new DateTime(2025, 8, 3, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            BusId = 2,
                            DepartureTime = new DateTime(2025, 8, 2, 23, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Cuddalore",
                            Fare = 800.00m,
                            IsDeleted = false,
                            Origin = "Chennai",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SeatId");

                    b.HasIndex("RouteId");

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            SeatId = 1,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "A1",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 2,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "A2",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 3,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 1,
                            SeatNumber = "B1",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 4,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 2,
                            SeatNumber = "C1",
                            Status = "Active"
                        },
                        new
                        {
                            SeatId = 5,
                            IsBooked = false,
                            IsDeleted = false,
                            RouteId = 2,
                            SeatNumber = "C2",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BusId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("HashKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("BusId")
                        .IsUnique()
                        .HasFilter("[BusId] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "CDM",
                            ContactNumber = "9876543210",
                            CreatedAt = new DateTime(2025, 8, 8, 20, 21, 54, 341, DateTimeKind.Local).AddTicks(4162),
                            Email = "Nimal@fastx.com",
                            Gender = "Male",
                            HashKey = new byte[] { 167, 141, 120, 144, 63, 42, 42, 66, 17, 81, 170, 248, 100, 4, 19, 193, 131, 66, 165, 230, 168, 229, 216, 157, 49, 79, 11, 211, 133, 254, 191, 168, 42, 94, 47, 205, 172, 111, 16, 213, 22, 188, 106, 107, 79, 242, 122, 54, 27, 24, 199, 247, 4, 2, 159, 145, 178, 197, 183, 249, 24, 140, 114, 50 },
                            IsDeleted = false,
                            Name = "Nimalan",
                            Password = new byte[] { 102, 127, 122, 215, 138, 228, 214, 47, 207, 240, 42, 69, 96, 83, 234, 54, 181, 10, 24, 11, 50, 252, 230, 148, 58, 79, 238, 172, 169, 105, 113, 91 },
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Address = "LA,california",
                            ContactNumber = "785423654",
                            CreatedAt = new DateTime(2025, 8, 8, 20, 21, 54, 341, DateTimeKind.Local).AddTicks(4326),
                            Email = "GM@fastx.com",
                            Gender = "Male",
                            HashKey = new byte[] { 168, 239, 149, 193, 24, 112, 114, 43, 109, 89, 39, 172, 26, 50, 155, 192, 4, 73, 208, 218, 235, 23, 30, 68, 22, 162, 95, 182, 144, 190, 10, 206, 210, 191, 102, 68, 122, 31, 22, 74, 60, 72, 57, 111, 164, 96, 94, 125, 91, 200, 144, 162, 102, 51, 50, 179, 150, 54, 65, 168, 96, 191, 207, 67 },
                            IsDeleted = false,
                            Name = "Guru",
                            Password = new byte[] { 171, 140, 18, 37, 193, 160, 174, 200, 14, 86, 129, 85, 210, 17, 130, 46, 196, 173, 216, 85, 141, 168, 239, 99, 125, 155, 85, 194, 250, 23, 212, 108 },
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            Address = "Heaven block 1",
                            BusId = 1,
                            ContactNumber = "4552155741",
                            CreatedAt = new DateTime(2025, 8, 8, 20, 21, 54, 341, DateTimeKind.Local).AddTicks(4566),
                            Email = "thordriver@fastx.com",
                            Gender = "Male",
                            HashKey = new byte[] { 247, 197, 113, 199, 133, 86, 159, 220, 126, 90, 95, 7, 121, 68, 239, 120, 121, 166, 121, 31, 234, 160, 27, 157, 226, 74, 172, 192, 2, 125, 241, 89, 68, 183, 107, 96, 245, 176, 228, 58, 212, 146, 53, 151, 139, 111, 10, 114, 54, 85, 182, 158, 149, 28, 239, 85, 73, 80, 187, 213, 63, 7, 117, 232 },
                            IsDeleted = false,
                            Name = "Driver Thor",
                            Password = new byte[] { 139, 255, 153, 51, 27, 211, 190, 52, 232, 98, 89, 106, 226, 26, 25, 82, 79, 152, 232, 190, 161, 176, 85, 7, 133, 91, 210, 225, 39, 149, 79, 111 },
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("FastxWebApi.Models.Booking", b =>
                {
                    b.HasOne("FastxWebApi.Models.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FastxWebApi.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Route");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FastxWebApi.Models.BookingSeat", b =>
                {
                    b.HasOne("FastxWebApi.Models.Booking", "Booking")
                        .WithMany("BookingSeats")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FastxWebApi.Models.Seat", "Seat")
                        .WithMany("BookingSeats")
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("FastxWebApi.Models.Payment", b =>
                {
                    b.HasOne("FastxWebApi.Models.Booking", "Booking")
                        .WithOne("Payment")
                        .HasForeignKey("FastxWebApi.Models.Payment", "BookingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FastxWebApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FastxWebApi.Models.Refund", b =>
                {
                    b.HasOne("FastxWebApi.Models.Booking", "Booking")
                        .WithOne("Refund")
                        .HasForeignKey("FastxWebApi.Models.Refund", "BookingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FastxWebApi.Models.User", "ProcessedByUser")
                        .WithMany("ProcessedRefunds")
                        .HasForeignKey("ProcessedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FastxWebApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("ProcessedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FastxWebApi.Models.Route", b =>
                {
                    b.HasOne("FastxWebApi.Models.Bus", "Bus")
                        .WithMany("Routes")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("FastxWebApi.Models.Seat", b =>
                {
                    b.HasOne("FastxWebApi.Models.Route", "Route")
                        .WithMany("Seats")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("FastxWebApi.Models.User", b =>
                {
                    b.HasOne("FastxWebApi.Models.Bus", "Bus")
                        .WithOne("BusOperator")
                        .HasForeignKey("FastxWebApi.Models.User", "BusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FastxWebApi.Models.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FastxWebApi.Models.Booking", b =>
                {
                    b.Navigation("BookingSeats");

                    b.Navigation("Payment");

                    b.Navigation("Refund");
                });

            modelBuilder.Entity("FastxWebApi.Models.Bus", b =>
                {
                    b.Navigation("BusOperator");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("FastxWebApi.Models.Role", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("FastxWebApi.Models.Route", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("FastxWebApi.Models.Seat", b =>
                {
                    b.Navigation("BookingSeats");
                });

            modelBuilder.Entity("FastxWebApi.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("ProcessedRefunds");
                });
#pragma warning restore 612, 618
        }
    }
}
